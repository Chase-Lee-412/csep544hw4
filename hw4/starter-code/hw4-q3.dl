/************ data model **************/
.type PersonType <: symbol
.type DescriptionType <: symbol

.decl person(name:PersonType, description:DescriptionType)
.input person(filename="DATA/person.facts")

.decl female(name:PersonType)
.input female(filename="DATA/female.facts")

.decl male(name:PersonType)
.input male(filename="DATA/male.facts")

.decl parent_child(p1:PersonType, p2:PersonType)
.input parent_child(filename="DATA/parent_child.facts")

.decl person_living(p:PersonType)
.input person_living(filename="DATA/person_living.facts")

/************* problem 0 **************/
/**** Find all children of Priscilla ****/
.decl p0(x:PersonType, d:DescriptionType)
// NOTE: if you want to redirect the output to a file
// you can use the syntax:
p0(x,d) :- parent_child("Priscilla",x), person(x,d).
.output p0(filename="hw4-q3-0.ans")
//p0(x,d) :- parent_child("Priscilla",x), person(x,d).


// Problem 1

.decl p1(x:PersonType,y:DescriptionType)
.decl desc(x:PersonType)

.output p1(filename="hw4-q3-1.ans")

desc(x) :- parent_child("Priscilla", x).
desc(x) :- parent_child(y, x), desc(y).
p1(x,d) :- desc(x), person(x,d).

// problem 2

